{"version":3,"sources":["webpack:///src/app/app.guard.ts","webpack:///src/app/services/authorization.service.ts","webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["AppGuard","router","authorizationService","next","state","isAuthenticated","parseUrl","url","providedIn","AuthorizationService","http","sessionStorage","window","user","get","apiPath","params","set","login","password","pipe","result","currentHash","getItem","isExist","findUsersByCurrentHash","toPromise","users","Boolean","length","environment","production","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","routes","path","loadChildren","then","m","AuthorizationModule","ContactsModule","canActivate","AppRoutingModule","forRoot","exports","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","e","Error","code","keys","module","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthorizationService } from './services/authorization.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppGuard implements CanActivate {\n  constructor(private router: Router, private authorizationService: AuthorizationService) {}\n\n   async canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Promise<boolean | UrlTree> {\n      const isAuthenticated = await this.authorizationService.isAuthenticated();\n      \n      return isAuthenticated || this.router.parseUrl(`/authorization?return=${state.url}`);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { User } from '../interfaces/user.interface';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthorizationService {\n\n    private sessionStorage: Storage;\n\n    constructor(private http: HttpClient) { \n        this.sessionStorage = window.sessionStorage;\n    }\n\n    public authorization(user: User): Observable<User> {\n        return this.http.get<User>(`${environment.apiPath}/users`, {\n            params: new HttpParams()\n            .set('login', user.login)\n            .set('password', user.password)\n        }).pipe(\n            map(result => result[0])\n        );\n    }\n\n    public async isAuthenticated() {\n        const currentHash = this.sessionStorage.getItem('hash');\n        let isExist = false;\n\n        if (currentHash) {\n            const users = await this.findUsersByCurrentHash(currentHash).toPromise();\n\n            isExist = Boolean(users.length);\n        } \n\n        return isExist;\n    }\n\n    findUsersByCurrentHash(currentHash): Observable<any> {\n        return this.http.get(`${environment.apiPath}/users`, {\n            params: new HttpParams()\n            .set('hash', currentHash)\n        });\n    }\n    \n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiPath: 'https://json-server-for-jever.herokuapp.com'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'personal-cabinet';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AppGuard } from './app.guard';\n\n\nconst routes: Routes = [\n  {\n    path: 'authorization',\n    loadChildren: () => import('./authorization/authorization.module').then(m => m.AuthorizationModule)\n  },\n  {\n    path: '',\n    loadChildren: () => import('./contacts/contacts.module').then(m => m.ContactsModule),\n    canActivate: [AppGuard]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}