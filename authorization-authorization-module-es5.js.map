{"version":3,"sources":["webpack:///src/app/authorization/authorization.component.ts","webpack:///src/app/authorization/authorization.component.html","webpack:///src/app/authorization/authorization.module.ts","webpack:///src/app/authorization/authorization-routing.module.ts"],"names":["AuthorizationComponent","router","authorizationService","route","_snackBar","sessionStorage","window","loginForm","login","required","password","queryParams","subscribe","params","authorization","value","user","console","log","setItem","hash","navigateByUrl","error","open","message","duration","verticalPosition","get","hasError","onSubmit","$event","preventDefault","selector","templateUrl","styleUrls","AuthorizationModule","imports","exports","declarations","routes","path","component","AuthorizationRoutingModule","forChild"],"mappings":"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","file":"authorization-authorization-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '../interfaces/user.interface';\nimport { AuthorizationService } from '../services/authorization.service';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.scss']\n})\nexport class AuthorizationComponent implements OnInit {\n\n  public loginForm: FormGroup;\n  private sessionStorage: Storage;\n  public return;\n\n  constructor(\n    private router: Router, \n    private authorizationService: AuthorizationService, \n    private route: ActivatedRoute,\n    private _snackBar: MatSnackBar) { \n    this.sessionStorage = window.sessionStorage;\n  }\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      login: new FormControl('', [\n        Validators.required,\n      ]),\n      password: new FormControl('', [\n        Validators.required,\n      ]),\n    });\n    this.route.queryParams.subscribe(params => this.return = params['return']);\n  }\n\n\n  public onSubmit(): void {\n    this.authorizationService.authorization(this.loginForm.value).subscribe(\n      (user: User) => {\n        console.log('Ответ от сервера', user);\n        this.sessionStorage.setItem('hash', user.hash);\n        this.sessionStorage.setItem('user', user.login);\n        this.router.navigateByUrl(this.return);\n      },\n      error => {\n        this._snackBar.open(error.message, 'Закрыть', {\n          duration: 3000,\n          verticalPosition: 'top',\n        });\n      }\n    );\n  }\n\n  public getErrorMessage() {\n    return this.loginForm.get('login').hasError('required') \n      || this.loginForm.get('password').hasError('required') \n        ? 'Это поле обязательное для заполнения' : '';\n  }\n}\n","<div class=\"wrapper\">\n    <form class=\"login-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\" (submit)=\"$event.preventDefault()\">\n        <mat-form-field>\n          <mat-label>Login</mat-label>\n          <input type=\"text\" formControlName=\"login\" matInput>\n          <mat-error *ngIf=\"loginForm.get('login').invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <mat-form-field>\n          <mat-label>Password</mat-label>\n          <input type=\"password\" formControlName=\"password\" matInput>\n          <mat-error *ngIf=\"loginForm.get('password').invalid\">{{getErrorMessage()}}</mat-error>\n        </mat-form-field>\n        <button mat-raised-button [disabled]=\"!loginForm.valid\">Submit</button>\n    </form>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AuthorizationComponent } from './authorization.component';\nimport { AuthorizationRoutingModule } from './authorization-routing.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field'; \nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AuthorizationRoutingModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSnackBarModule\n  ],\n  exports: [\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatSnackBarModule\n  ],\n  declarations: [AuthorizationComponent]\n})\nexport class AuthorizationModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthorizationComponent } from './authorization.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AuthorizationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class AuthorizationRoutingModule { }\n"]}